<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Colors</title>
    <script>
        function write(selector, text) {
            const e = document.querySelector(selector);
            if (typeof text === "object") {
                for (const [k, v] of Object.entries(text)) {
                    e[k] = v;
                }
            } else {
                e.innerText = text;
            }
        }

        function pick(items) {
            return items[Math.floor(Math.random() * items.length)];
        }
    </script>
    <script type="module">
        import { colors, isColorful, coordinating, contrasting, neutrals, whites, darks, toColor } from "./colors.js";

        class ColorSwatch extends HTMLElement {

            connectedCallback() {
                const color = toColor(this.dataset.color) ?? toColor("cerys"); 
                this.dataset.colorJSON = JSON.stringify(color, null, 2);

                this.style.backgroundColor = color.color;
                this.style.fill = color.color;
                this.style.color = color.hsl.l > 70 ? "black" : "white";

                let title = this.querySelector(".title") ?? undefined;
                if (title === undefined) {
                    title = this.ownerDocument.createElement("div");
                    title.classList.add("title");
                    this.append(title);
                }

                title.innerText = color.title.replaceAll(/[™®]/g, "");

                let num = this.querySelector(".number") ?? undefined;
                if (num === undefined) {
                    num = this.ownerDocument.createElement("div");
                    num.classList.add("number");
                    this.append(num);
                }

                num.innerText = color.number ?? "";
            }
        }

        customElements.define("color-swatch", ColorSwatch);

        function pickColorful(colors) {
            while (true) {
                const result = pick(colors);
                if (isColorful(result)) {
                    return result;
                }
            }
        }
        const primary = pickColorful(colors);
        const fns = { coordinating, contrasting, darks, neutrals, whites };

        const all = { primary };
        for (const key of Object.keys(fns)) {
            all[key] = fns[key](primary);
        }

        console.log(all);
        console.log(colors);

        document.body.innerHTML = `<div class="primary"><color-swatch data-color="${primary.id}"></color-swatch></div>` + Object.keys(fns).map(key => {
            const colors = all[key].colors;
            if (colors.length === 0) {
                return "";
            }
            return `<div class="${key}" title="${key}"><color-swatch data-color="${pick(colors).id}"></color-swatch></div>`;
        }).join("\n");
        
    </script>
    <style>
        :root {
            font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;
        }
        color-swatch {
            display: block;
            width: 16vh;
            height: 10vh;
        }
        .title {
            padding: 0.5rem;
        }
        .number {
            display: none;
        }
    </style>
</head>
<body>
    
</body>
</html>